---
// Props pour l'image, le titre de la section et l'alignement du texte
const { imageUrl, title, textAlign = 'center', id } = Astro.props;
---

<div class="section-divider" id={id}>
  <div class="parallax-bg" style={`background-image: url(${imageUrl});`}></div>
  <div class="overlay"></div>
  {title && 
    <div class="container">
      <div class="title-card">
        <h2 class={`section-title text-${textAlign}`}>{title}</h2>
      </div>
    </div>
  }
</div>

<style>
  .section-divider {
    position: relative;
    width: 100%;
    height: 240px;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
  }

  .parallax-bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 120%;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    transform: translateZ(0);
    will-change: transform;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(26, 54, 93, 0.8), rgba(45, 55, 72, 0.7));
    z-index: 1;
  }

  .container {
    position: relative;
    z-index: 2;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--spacing-xl);
  }

  .title-card {
    background-color: rgba(255, 255, 255, 0.9);
    padding: 1.5rem 2rem;
    border-radius: 8px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    transform: translateY(30px);
    position: relative;
    transition: all 0.5s ease;
    min-width: 220px;
    max-width: 80%;
    margin: 0 auto;
  }
  
  .section-divider:hover .title-card {
    transform: translateY(20px);
  }
  
  .section-title {
    margin: 0;
    font-size: var(--text-3xl);
    font-weight: 700;
    color: var(--color-primary);
    position: relative;
  }
  
  .title-card::before {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 30px;
    height: 30px;
    background-color: rgba(255, 255, 255, 0.9);
    transform-origin: center;
    rotate: 45deg;
    z-index: -1;
  }

  @media (max-width: 768px) {
    .section-divider {
      height: 200px;
    }
    
    .section-title {
      font-size: var(--text-2xl);
    }
  }
</style>

<script define:vars={{ id }}>
// Script pour l'effet de parallaxe au dÃ©filement
document.addEventListener('DOMContentLoaded', () => {
  const sectionDivider = document.getElementById(id);
  if (sectionDivider) {
    const parallaxBg = sectionDivider.querySelector('.parallax-bg');
    
    window.addEventListener('scroll', () => {
      if (isElementInViewport(sectionDivider)) {
        const scrollPosition = window.pageYOffset;
        const speed = 0.5;
        const yPos = -(scrollPosition * speed / 10);
        parallaxBg.style.transform = `translateY(${yPos}px)`;
      }
    });
  }
  
  function isElementInViewport(el) {
    const rect = el.getBoundingClientRect();
    return (
      rect.top <= (window.innerHeight || document.documentElement.clientHeight) &&
      rect.bottom >= 0
    );
  }
});
</script>